# 1.闭包
# 闭包的本质就是函数的嵌套定义，即在函数内部再定义函数
#
# 闭包有两种不同的方式，第一种是“返回一个函数名称”，第二种是在函数内部就“直接调用”
#
# 闭包的定义：在一个外函数中定义了一个内函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用
#
# 引用是什么？Python 中的几乎所有东西都是对象，拥有属性和方法，包括整型，浮点型、函数，都是对象
#
# 返回一个函数名称：
# 定义外层函数
def outer():
    # 外函数临时变量num_01
    num1 = 100

    def inner():
        # 内函数里运用了外函数的临时变量
        num2 = num1 + 1
        print("num2 =", num2)

    # 外函数的返回值是内函数的引用
    return inner


outer()()


# 直接调用
def outer():
    # 外函数临时变量num1
    num1 = 100

    def inner():
        # 内函数里运用了外函数的临时变量
        num2 = num1 + 1
        print("num2 =", num2)

    # 外函数的返回值是内函数的引用
    return inner()


outer()
# print为：num2=101
